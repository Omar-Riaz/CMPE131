!function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=39)}({39:function(e,n,t){"use strict";function o(){var e={active:!0,currentWindow:!0};return new Promise(function(n,t){chrome.tabs.query(e,function(e){var t=e[0].url;console.assert("string"==typeof t,"tab.url should be a string"),n(t)})})}function r(){return new Promise(function(e,n){var t="document.getSelection().toString()";var o;var r=chrome.tabs.executeScript({code:t},function(n){console.log(n[0]);e(n[0])})})}function i(e){return new Promise(function(n,t){console.log(e);chrome.storage.sync.get(e,function(t){n(chrome.runtime.lastError?null:t[e])})})}function c(){var e="",n,t=[],c,u;o().then(function(n){u=n;var t=r();t.then(function(n){e=n});i(u)}).then(function(n){console.log("about to render modal");var t=new Promise(function(e,n){chrome.tabs.query({active:true,currentWindow:true},function(n){e(n[0].id)})});t.then(function(n){chrome.tabs.sendMessage(n,{contentType:"url",quoteText:e,url:u},function(e){if(e){console.log(e)}})})})}chrome.runtime.onInstalled.addListener(function(e){chrome.contextMenus.create({type:"normal",id:"1",contexts:["selection"],title:"ReMedia: annotate selection"}),chrome.contextMenus.create({type:"normal",id:"2",contexts:["page"],title:"ReMedia: show mini annotater"}),function(){chrome.tabs.onUpdated.addListener(function(e,n,t){var o=new Promise(function(e,n){chrome.tabs.query({active:!0,currentWindow:!0},function(n){e(n[0].id)})});o.then(function(e){e=e,chrome.tabs.sendMessage(e,{contentType:"create"},function(e){e&&console.log(e)})});new Promise(function(e,n){chrome.tabs.executeScript({code:"document.onselectionchange = function(){var editor = new MediumEditor('.editable', {\n    toolbar: {\n        /* These are the default options for the toolbar,\n           if nothing is passed this is what is used */\n        allowMultiParagraphSelection: true,\n        buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3', 'quote'],\n        diffLeft: 0,\n        diffTop: -10,\n        firstButtonClass: 'medium-editor-button-first',\n        lastButtonClass: 'medium-editor-button-last',\n        relativeContainer: null,\n        standardizeSelectionStart: false,\n        static: false,\n        /* options which only apply when static is true */\n        align: 'center',\n        sticky: false,\n        updateOnEmptySelection: false\n    }\n});}"},function(n){console.log("medium toolbar registered:"+n),e(n)})})}),chrome.contextMenus.onClicked.addListener(function(e){var n=e.menuItemId;1==n?c():2==n&&new Promise(function(e,n){chrome.tabs.query({active:!0,currentWindow:!0},function(n){e(n[0].id)})}).then(function(e){o().then(function(n){chrome.tabs.sendMessage(e,{contentType:"triggerMiniModal",url:n},function(e){e&&console.log(e)})})})})}()})}});