{"version":3,"file":"contentScript.1e0ad1857a131d2c74d3.hot-update.js","sources":["webpack:///./src/annotations_mini_modal.js"],"sourcesContent":["const React = require('react');\r\nconst ReactDOM = require('react-dom');\r\nconst annotationsList = require('./annotations_list');\r\nconst annotationFunctions = require('./annotationFunctions');\r\nimport Draggable from 'react-draggable';\r\n\r\nexport default function (request) {\r\n\r\n    class AnnotationMiniModal extends React.Component {\r\n\r\n        constructor(props) {\r\n            super();\r\n\t    \tthis.handleClickSpan = this.handleClickSpan.bind(this);\r\n\t\t}\r\n\r\n/*\r\n \t//create modal --> ID and class\r\n        et modal = document.createElement('div');\r\n        modal.setAttribute('id', 'parentModal');\r\n        modal.setAttribute('class', 'modal');\r\n            let modalChild = document.createElement('div');\r\n            modalChild.setAttribute('class', 'modal-content');\r\n                let modalChildSpan = document.createElement('span');\r\n                modalChildSpan.setAttribute('class', 'close\">&times');\r\n                modalChild.appendChild(modalChildSpan);\r\n                let modalChildQuote = document.createElement('div');\r\n                modalChildQuote.setAttribute('id', 'quoteText');\r\n                modalChild.appendChild(modalChildQuote);\r\n                let modalChildAnnotation = document.createElement('div');\r\n                modalChildAnnotation.setAttribute('id', 'annotationText');\r\n                modalChild.appendChild(modalChildAnnotation);\r\n                let modalChildAnnotationList = document.createElement('div');\r\n                modalChildAnnotationList.setAttribute('id', 'annotationList');\r\n                modalChild.appendChild(modalChildAnnotationList);\r\n\tmodal.appendChild(modalChild);\r\n\r\n        modalChildSpan.onclick = () => {           //close if press the x\r\n            modal.style.display = \"none\";\r\n\t};\r\n        modal.style.display = \"none\";                                                    //set to no display by default\r\n        document.body.appendChild(modal);                   //add to HTML body of page\r\n\t\r\n */\r\n\r\n\t//Edit annotations by re-evoking the process of making an annotation, with the exception that the application doesn't flag a duplicate entry!\r\n\t\r\n\r\n\t\thandleClickSpan(){\r\n\t\t\tlet modal = this.refs.parentModal;\r\n\t\t\tmodal.style.display = \"none\";\r\n\t\t}\r\n\r\n\t\t    /*annotationChange(){\r\n\t    annotationsList(request.url);\r\n\t}*/\r\n\r\n\t    \r\n        render() {               //rendering a single annotationObject for each element in annotationObjects\r\n\t\t\tconst modalStyle = {\r\n\t\t\t\tdisplay: \"none\"\r\n\t\t\t};\r\n\t\t\tconst miniModalListStyle = {\r\n\t\t\t\toverflowX: \"none\",\r\n\t\t\t\toverflowY: \"none\"\r\n\t\t\t};\r\n\t\t\tconst margining = {\r\n\t\t\t\tmargin: \"15% auto\", /* 15% from the top and centered */\r\n\t\t\t\tpadding: \"20px\"\r\n\t\t\t};\r\n\r\n\t\t\treturn(\r\n\t\t\t\t<div><Draggable>\t\t\r\n\t\t\t\t\t<div id=\"parentMiniModal\" refs=\"parentMiniModal\" className=\"miniModal\" style={modalStyle}>\r\n\t\t\t\t\t\t\t<div className=\"miniModal-content\">\r\n\t\t\t\t\t\t\t<span onClick={this.handleClickSpan}></span>\r\n\t\t\t\t\t\t\t<div className=\"annotationList\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Draggable></div>\r\n\t\t\t);\r\n\t\t}\r\n    }\r\n\t\r\n    ReactDOM.render(\r\n        <AnnotationMiniModal/>,\r\n        document.getElementById('annotationMiniModal')\r\n    );\r\n\t\r\n\r\n}\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AAxCA;AAAA;AAAA;AA0CA;AACA;AACA;AAEA;;;;AA9CA;AAAA;AAAA;AAmDA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AACA;AAFA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AA1EA;AACA;AADA;AAAA;AACA;AA4EA;AAMA;;;;A","sourceRoot":""}